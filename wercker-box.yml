name: drunken-golang
version: 0.1.1
inherits: wercker/default@0.0.2
type: main
platform: ubuntu@12.04
description: Wercker box for Golang with C11 and C++11 support
keywords:
    - LLVM
    - GCC
    - Clang
    - C11
    - C++11
    - Autotools
    - golang
    - go
    - goxc

packages:
    - build-essentials
    - wget
    - curl
    - git-core
    - nano
    - imagemagick
    - libmagickwand-dev
    - llvm@3.4.2
    - clang@3.4.2
    - gcc@4.8.1
    - binutils@2.22
    - make@3.81
    - automake@1.14.1
    - autoconf@2.69
    - libtool@2.4.2
    - libssl-dev
    - golang@1.3.3
    - git
    - mercurial
    - bzr

script: |
    set -e
    #sudo apt-get purge -y --auto-remove make gcc g++ automake autoconf
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    sudo add-apt-repository -y 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main'
    wget -q -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    # Add updated G++
    sudo add-apt-repository -y ppa:asolovets/backports
    sudo apt-get update
    sudo apt-get install binfmt-support build-essential binutils -y
    sudo apt-get install gcc-4.8 g++-4.8 -y
    sudo apt-get install clang-3.4 clang-3.4-doc libclang-common-3.4-dev libclang-3.4-dev libclang1-3.4 libclang1-3.4-dbg libllvm-3.4-ocaml-dev libllvm3.4 libllvm3.4-dbg lldb-3.4 llvm-3.4 llvm-3.4-dev llvm-3.4-doc llvm-3.4-examples llvm-3.4-runtime clang-modernize-3.4 clang-format-3.4 python-clang-3.4 lldb-3.4-dev
    sudo apt-get install automake-1.14 autoconf=2.69-6~precise1~ppa1 libtool make -y
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 99
    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 99
    sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.4 99
    ld --version
    gcc --version
    g++ --version
    clang --version
    make --version
    automake --version
    autoconf --version
    libtool --version

    #Setup Golang
    version="1.4rc2"

    sudo apt-get install bzr
    sudo apt-get install mercurial
    wget http://golang.org/dl/go${version}.linux-amd64.tar.gz
    sudo tar -C /usr/local -xzf go${version}.linux-amd64.tar.gz
    rm go${version}.linux-amd64.tar.gz

    # Set Path
    cat .profile >> $HOME/.bash_profile
    source .profile
    echo $PATH

    # build cross compiling support
    go get -u -v github.com/laher/goxc
    go get -u -v github.com/tools/godep
    sudo -E env PATH=$HOME/go/bin:$PATH goxc -t
box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir
    - files:
      - main.go
    - files:
      - app.go
    - files:
      - server.go

default-build:
  go:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # Sets the go workspace and places you package
          # at the right place in the workspace tree
          - setup-go-workspace

          # Gets the dependencies
          - script:
              name: go get
              code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get -t ./...

          # Build the project
          - script:
              name: go build
              code: |
                go build ./...

          # Test the project
          - script:
              name: go test
              code: |
                go test ./...
